use crate::wgl;

#[derive(Clone, Debug, PartialEq, Serialize)]
pub enum WGL {
    Root,
    Integer(i64),
    Float(f64),
    String(String),
    Unknown,
    Signals,
    Signal(String),
    Bus(i32,i32),
    Group,
    SignalRef(String),
    Range(i32,Option<i32>),
    MuxMembers,
    MuxList,
    Identifier(String),
    SignalAttributes,
    Mux,
    DataBitCount(i32),
    Wide(i32),
    SigDirection(wgl::Dir,Option<wgl::DirType>),
    Strobe(wgl::StrobeDir,String,String),
    Radix(wgl::Radix),
    DutPins,
    DutPinGroup,
    PinInfo,
    PinName,
    PinNumber,
    AtePins,
    AtePinGroup,
    AtePinInfo,
    PState(String),
    ScanCells,
    ScanCell(String),
    ScanGroup,
    ScanRange(u32,u32),
    CellRef(String),
    ScanStates,
    ScanState(String),
    StateVector(String),
    StateString(String),
    ScanChains,
    ScanChain(String),
    ScanChainInEdge(String),
    ScanChainOutEdge(String),
    ScanChainMemInvert,
    TimePlate(String),
    TimeRef,
    Time(f32,wgl::TimeUnit),
    Channel,
    Track,
    Event(bool,String,String,Option<String>),
    Pattern(String),
    Subroutine(String),
    PatternParam(String),
    PatternParamDir(String),
    PatternRow(Option<String>),
    LoopStmt(i32,Option<String>),
    Repeat(i32),
    Vector,
    Address,
    AddressIncrement,
    PatternExpression,
    StateStringWithSelector,
    Selector(String),
    TimeComment,
    Call(String),
    Offset,
    ScanRow,
    ScanRun(wgl::ScanDir,String,String),
    Symbolic,
    SymDirection(wgl::Dir,Option<wgl::DirType>),
    SymAssignment(Option<String>),
    EquationSheet(String),
    ExprSet(String),
    Variable(String),
    Positive,
    Negative,
    PreIncrement,
    PostIncrement,
    PreDecrement,
    PostDecrement,
    Parens,
    BuiltInFuncCall(wgl::BuiltInFunc),
    BuiltInVar(wgl::BuiltInVar),
    Add,
    Subtract,
    Multiply,
    Divide,
    Power,
    Constant(f32,Option<wgl::Scale>,Option<wgl::EqUnit>),
    MinMax,
    Min,
    Max,
    EquationDefaults,
    DefaultPair(String,String),
    Formats,
    Format(String),
    TdsState(String),
    Registers,
    PinList,
    Register(String),
    FormatSpec(String), 
    PinGroups,
    PinGroup(String),
    TimeGens,
    TimeGen(String,Option<u32>,wgl::TimeGenType),
    TimingSet(i32),
    TimeGenAssign(Option<i32>),
    MacroDef(String),
    MacroBody(String),
    MacroInvocation(String),
    Include(String),
    Annotation(String),
    GlobalMode(wgl::PmodeOption),
}

impl std::fmt::Display for WGL {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match &self {
            _ => write!(f, "{}", format!("{:?}", self)),
        }
    }
}